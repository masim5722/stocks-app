{"version":3,"sources":["reportWebVitals.js","components/layout/styles.js","components/layout/Header.jsx","components/loader/styles.js","components/stocks/Stock.jsx","components/redux/actions/loaderAction.js","components/stocks/StockContainer.js","services/api.js","routes/routes.js","components/loader/Loader.jsx","components/layout/Layout.jsx","components/redux/reducers/loaderReducer.js","components/redux/store.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","makeStyles","theme","appBar","zIndex","drawer","background","width","toolBar","backgroundColor","paddingLeft","paddingRight","minHeight","iconColor","color","marginTop2","marginTop","Header","classes","useStyles","AppBar","position","className","Toolbar","IconButton","Typography","variant","weight","backdrop","textAlign","mbt2","marginBottom","mr2","marginRight","textAlignRight","filterButton","StockView","props","options","series","formData","setFormData","handleFilter","pagination","handleChangePage","handleChangeRowsPerPage","Grid","container","lg","Divider","FormControl","TextField","id","value","symbol","label","InputLabelProps","shrink","onChange","e","setSymbol","target","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDatePicker","inputFormat","date","newDate","setDate","dayjs","format","renderInput","params","Button","size","onClick","InputLabel","Select","labelId","sorting","setSorting","sortingOptions","map","MenuItem","type","height","TablePagination","count","page","onPageChange","rowsPerPage","onRowsPerPageChange","toggleLoader","payload","isLoading","Stock","useState","setCount","setRowsPerPage","setPage","stocks","setStocks","dispatch","useDispatch","createUrl","apiBaseUrl","refineSorting","nextPage","Number","fetchStocksData","url","Promise","resolve","reject","axios","get","headers","response","data","error","getStocks","array","results","forEach","item","push","x","Date","y","open","high","low","close","catch","console","log","useEffect","chart","title","text","align","annotations","xaxis","borderColor","style","fontSize","orientation","offsetY","tooltip","custom","seriesIndex","dataPointIndex","w","globals","initialSeries","labels","formatter","val","yaxis","enabled","name","event","newPage","parseInt","AppRoutes","exact","path","component","StockContainer","Loader","Backdrop","CircularProgress","Layout","loaderState","useSelector","state","loader","Container","maxWidth","loaderDefaultState","loaderReducer","action","store","createStore","combineReducers","compose","applyMiddleware","thunk","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.8d5d907e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {makeStyles} from \"@material-ui/core\";\r\n\r\nexport default makeStyles((theme) => ({\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        background: 'transparent !important',\r\n        width: '100vw'\r\n    },\r\n    toolBar: {\r\n        backgroundColor: '#00508F',\r\n        paddingLeft: '16px !important',\r\n        paddingRight: '16px !important',\r\n        minHeight: '55px !important'\r\n    },\r\n    iconColor:{\r\n        color: '#fff'\r\n    },\r\n    marginTop2:{\r\n        marginTop: \"4rem\"\r\n    }\r\n}))\r\n","import {AppBar, IconButton, Toolbar, Typography} from \"@material-ui/core\";\r\nimport ShowChartIcon from '@mui/icons-material/ShowChart';\r\nimport useStyles from \"./styles\";\r\n\r\nconst Header = () => {\r\n    let classes = useStyles()\r\n\r\n    return (\r\n        <AppBar position={\"fixed\"} className={classes.appBar}>\r\n            <Toolbar className={classes.toolBar}>\r\n                <IconButton className={classes.iconColor}>\r\n                    <ShowChartIcon />\r\n                </IconButton>\r\n\r\n                <Typography variant=\"h6\" weight=\"medium\">\r\n                    <label>Stocks</label>\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import {makeStyles} from \"@material-ui/core\";\r\n\r\nexport default makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#555',\r\n        background: '#ffffffcf',\r\n        textAlign: 'center'\r\n    },\r\n    mbt2:{\r\n        marginTop: '2rem',\r\n        marginBottom: '2rem'\r\n    },\r\n    mr2:{\r\n        marginRight: '2rem',\r\n    },\r\n    textAlignRight:{\r\n        textAlign: 'right'\r\n    },\r\n    filterButton:{\r\n        backgroundColor: '#40abfc',\r\n        color: 'white',\r\n        marginTop: '0.5rem',\r\n        '&:hover' :{\r\n            backgroundColor: '#1e76b9 !important',\r\n        }\r\n    }\r\n}))\r\n","import React from \"react\"\nimport {\n    Button,\n    Divider,\n    FormControl,\n    Grid,\n    InputLabel,\n    MenuItem,\n    Select, TablePagination,\n    TextField,\n    Typography\n} from \"@material-ui/core\";\nimport Chart from \"react-apexcharts\";\nimport useStyles from \"../loader/styles\";\nimport DesktopDatePicker from \"@mui/lab/DesktopDatePicker\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport dayjs from \"dayjs\";\n\nconst StockView = (props) => {\n    let classes = useStyles()\n\n    let {\n        options,\n        series,\n        formData,\n        setFormData,\n        handleFilter,\n        pagination,\n        handleChangePage,\n        handleChangeRowsPerPage\n    } = props\n    return (\n        <Grid container>\n            <Grid lg={12}>\n                <Typography variant={\"h4\"} weight=\"medium\">\n                    Stocks\n                </Typography>\n                <Divider />\n            </Grid>\n\n            <Grid lg={6} className={classes.mbt2}>\n                <FormControl className={classes.mr2}>\n                    <TextField\n                        id=\"filled-basic\"\n                        value={formData.symbol}\n                        label=\"Symbol\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        onChange={(e) => {setFormData.setSymbol(e.target.value)}}\n                        variant=\"standard\"\n                    />\n                </FormControl>\n\n                <FormControl className={classes.mr2}>\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <DesktopDatePicker\n                            label=\"Date\"\n                            inputFormat=\"yyyy-MM-dd\"\n                            value={formData.date}\n                            onChange={(newDate) => {setFormData.setDate(dayjs(newDate).format('YYYY-MM-DD'))}}\n                            renderInput={(params) => <TextField {...params} />}\n                        />\n                    </LocalizationProvider>\n                </FormControl>\n\n                <FormControl>\n                    <Button variant=\"contained\" className={classes.filterButton}  size=\"large\" onClick={handleFilter}>Filter</Button>\n                </FormControl>\n            </Grid>\n            <Grid lg={6} className={[classes.mbt2, classes.textAlignRight]}>\n                <FormControl>\n                    <InputLabel id=\"sorting-label\">Sort By</InputLabel>\n                    <Select\n                        labelId=\"sorting-label\"\n                        id=\"sorting\"\n                        value={formData.sorting}\n                        label=\"Sort By\"\n                        onChange={(e) => {setFormData.setSorting(e.target.value)}}\n                    >\n                        {\n                            formData.sortingOptions.map((options) =>\n                                <MenuItem value={options}>{options}</MenuItem>\n                            )\n                        }\n                    </Select>\n                </FormControl>\n            </Grid>\n\n            <Grid lg={12}>\n                <Chart options={options} series={series} type=\"candlestick\" height={550} />\n            </Grid>\n            <Grid lg={12} className={classes.textAlignRight}>\n                <TablePagination\n                    count={pagination.count}\n                    page={pagination.page}\n                    onPageChange={handleChangePage}\n                    rowsPerPage={pagination.rowsPerPage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default StockView\n","/**\r\n * Loader Action\r\n * @param toggleLoader\r\n * @returns {{payload: (boolean|*), type: string}}\r\n */\r\nexport const toggleLoader = (toggleLoader) => {\r\n    return {\r\n        type: 'TOGGLE_ISLOADING',\r\n        payload: toggleLoader.isLoading\r\n    }\r\n}","import React, {useEffect, useState} from \"react\"\r\nimport StockView from \"./Stock\";\r\nimport {getStocks} from \"../../services/api\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {toggleLoader} from \"../redux/actions/loaderAction\";\r\nimport dayjs from \"dayjs\";\r\n\r\n/**\r\n * Smart/Container component for Stocks\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nconst Stock = () =>{\r\n    let [count, setCount] = useState(0)\r\n    let [rowsPerPage, setRowsPerPage] = useState(25)\r\n    let [page, setPage] = useState(0)\r\n\r\n    let [stocks, setStocks] = useState([])\r\n    let [symbol, setSymbol] = useState(\"\")\r\n    let [date, setDate] = useState(\"2021-06-15\")\r\n    let [sorting, setSorting] = useState(\"Close Ascending\") // default sorting by close descending\r\n    let [sortingOptions, setSortingOptions] = useState([\r\n        'Open Ascending',\r\n        'Open Descending',\r\n        'Close Ascending',\r\n        'Close Descending',\r\n        'High Ascending',\r\n        'High Descending',\r\n        'Low Ascending',\r\n        'Low Descending'\r\n    ])\r\n\r\n    const formData = {symbol, date, sortingOptions, sorting}\r\n    const setFormData = {setSymbol, setDate, setSorting}\r\n    const pagination = {count, rowsPerPage, page}\r\n\r\n    // redux\r\n    const dispatch = useDispatch()\r\n\r\n    /**\r\n     * Refining sorting value according to the api\r\n     * @returns {string}\r\n     */\r\n    const refineSorting = () =>{\r\n        switch (sorting){\r\n            case 'Open Ascending':\r\n                return 'open'\r\n            case 'Open Descending':\r\n                return '-open'\r\n            case 'Close Ascending':\r\n                return 'close'\r\n            case 'Close Descending':\r\n                return '-close'\r\n            case 'High Ascending':\r\n                return 'high'\r\n            case 'High Descending':\r\n                return '-high'\r\n            case 'Low Ascending':\r\n                return 'low'\r\n            case 'Low Descending':\r\n                return '-low'\r\n            default:\r\n                return '-close'\r\n        }\r\n    }\r\n    /**\r\n     * function to create api url\r\n     * on the basis of filtering and sorting\r\n     * @returns {string}\r\n     */\r\n    const createUrl = () =>{\r\n        let apiBaseUrl = 'http://127.0.0.1:8000/api/stocks/?ordering='+refineSorting()\r\n        const nextPage = Number(pagination.page) + Number(1)\r\n        if(date){\r\n            apiBaseUrl = apiBaseUrl+'&date='+date\r\n        }\r\n        if(symbol){\r\n            apiBaseUrl = apiBaseUrl+'&symbol='+symbol\r\n        }\r\n\r\n        return apiBaseUrl+'&page='+nextPage+'&page_size='+rowsPerPage\r\n    }\r\n\r\n    /**\r\n     * Function to fetch stocks data\r\n     */\r\n    const fetchStocksData = () =>{\r\n        // showing loader\r\n        dispatch(toggleLoader({isLoading: true}))\r\n        // api call\r\n        const url = createUrl()\r\n        getStocks(url).then((response) =>{\r\n            // response && setStocks(response)\r\n           if(response){\r\n               setCount(response.count)\r\n\r\n               let array =[]\r\n               if(response && response.results){\r\n                   response.results.forEach((item) =>{\r\n                       array.push({\r\n                           x: new Date(item.date),\r\n                           y: [item.open, item.high, item.low, item.close, item.symbol]\r\n                       })\r\n                   })\r\n                   setStocks(array)\r\n                   // hiding loader\r\n                   dispatch(toggleLoader({isLoading: false}))\r\n               }\r\n           }\r\n        })\r\n            .catch((error) =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    /**\r\n     * function to call api by applying filters\r\n     */\r\n    const handleFilter = () =>{\r\n        fetchStocksData()\r\n    }\r\n\r\n    /**\r\n     * changing page\r\n     * @param event\r\n     * @param newPage\r\n     */\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage)\r\n    }\r\n\r\n    /**\r\n     * Handle rows change per page value\r\n     * @param event\r\n     */\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0)\r\n    };\r\n\r\n    // calling API on component mount\r\n    useEffect(()=>{\r\n        fetchStocksData()\r\n    },[])\r\n\r\n    // this will call when sorting value is changed\r\n    useEffect(() =>{\r\n        fetchStocksData()\r\n    }, [sorting])\r\n\r\n    // this will call when page value is changed\r\n    useEffect(() =>{\r\n        fetchStocksData()\r\n    }, [page, rowsPerPage])\r\n\r\n    // graph options\r\n    const options = {\r\n        chart: {\r\n            height: 450,\r\n            type: 'candlestick',\r\n        },\r\n        title: {\r\n            text: 'Stock graph',\r\n            align: 'left'\r\n        },\r\n        annotations: {\r\n            xaxis: [\r\n                {\r\n                    x: '',\r\n                    borderColor: '#00E396',\r\n                    label: {\r\n                        borderColor: '#00E396',\r\n                        style: {\r\n                            fontSize: '12px',\r\n                            color: '#fff',\r\n                            background: '#00E396'\r\n                        },\r\n                        orientation: 'horizontal',\r\n                        offsetY: 7,\r\n                        text: 'Annotation Test'\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        tooltip: {\r\n            custom: function({series, seriesIndex, dataPointIndex, w}) {\r\n                let data = w.globals.initialSeries[seriesIndex].data[dataPointIndex];\r\n                return '<ul>' +\r\n                    '<li><b>Symbol</b>: ' + data.y[4] + '</li>' +\r\n                    '<li><b>Open</b>: ' + data.y[0] + '</li>' +\r\n                    '<li><b>High</b>: ' + data.y[1] + '</li>' +\r\n                    '<li><b>Low</b>: ' + data.y[2] + '</li>' +\r\n                    '<li><b>Close</b>: ' + data.y[3] + '</li>' +\r\n                    '</ul>';\r\n            }\r\n        },\r\n        xaxis: {\r\n            type: 'category',\r\n            labels: {\r\n                formatter: function (val) {\r\n                    return dayjs(val).format('MMM DD')\r\n                }\r\n            }\r\n        },\r\n        yaxis: {\r\n            tooltip: {\r\n                enabled: true\r\n            }\r\n        }\r\n    }\r\n\r\n    // graph data\r\n    const series =  [{\r\n            name: 'stocks',\r\n            data: stocks\r\n    }]\r\n\r\n    return <StockView\r\n        options={options}\r\n        series={series}\r\n        formData={formData}\r\n        setFormData={setFormData}\r\n        handleFilter={handleFilter}\r\n        pagination={pagination}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n    />\r\n}\r\n\r\nexport default Stock","import axios from \"axios\";\r\n\r\n/**\r\n * API call to get stocks\r\n * @returns {Promise<unknown>}\r\n */\r\nexport const getStocks = (url) => new Promise((resolve, reject) => {\r\n    const headers = {\r\n        'Content-Type': 'application/json'\r\n    }\r\n    axios.get(url, {headers: headers})\r\n    .then((response) =>{\r\n        resolve(response.data)\r\n    })\r\n    .then((error) =>{\r\n        reject(error)\r\n    })\r\n})","import React from \"react\"\r\nimport {\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\"\r\n\r\nimport StockContainer from \"../components/stocks/StockContainer\";\r\n\r\nconst AppRoutes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" component={StockContainer} />\r\n            <Route exact path=\"/stocks\" component={StockContainer} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default AppRoutes","import React from \"react\";\r\nimport useStyles from './styles'\r\nimport {Backdrop, CircularProgress, Grid} from \"@material-ui/core\";\r\n\r\nconst Loader = ({isLoading}) => {\r\n    let classes = useStyles()\r\n\r\n    return (\r\n        <Backdrop open={isLoading} className={classes.backdrop} >\r\n            <Grid lg={12}>\r\n                <CircularProgress color={\"inherit\"} />\r\n            </Grid>\r\n        </Backdrop>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from \"react\"\r\nimport {\r\n    BrowserRouter as Router\r\n} from \"react-router-dom\"\r\n\r\nimport Header from \"./Header\"\r\nimport AppRoutes from \"../../routes/routes\"\r\nimport {Grid} from \"@mui/material\";\r\nimport Loader from \"../loader/Loader\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Container} from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst Layout = () => {\r\n    let classes = useStyles()\r\n\r\n    const loaderState = useSelector(state => state.loader)\r\n\r\n    return (\r\n        <Router>\r\n            <Loader isLoading={loaderState.isLoading} />\r\n            <Grid className=\"Layout\">\r\n                <Header />\r\n            </Grid>\r\n\r\n            <Container maxWidth={\"lg\"} className={classes.marginTop2}>\r\n                <AppRoutes />\r\n            </Container>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default Layout;\r\n","const loaderDefaultState = { isLoading:  false}\r\n\r\n/**\r\n * Loader Reducers\r\n * @param state\r\n * @param action\r\n * @returns {{isLoading: boolean}|{isLoading}}\r\n */\r\nconst loaderReducer= (state = loaderDefaultState, action) => {\r\n    switch (action.type){\r\n        case \"TOGGLE_ISLOADING\":\r\n            return {...state, isLoading: action.payload}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default loaderReducer","import {createStore, combineReducers, compose, applyMiddleware} from 'redux'\r\nimport thunk from \"redux-thunk\"\r\nimport loaderReducer from \"./reducers/loaderReducer\"\r\n\r\nconst store = () => {\r\n    return createStore(\r\n        combineReducers({\r\n            loader: loaderReducer\r\n        }),\r\n        compose(applyMiddleware(thunk))\r\n    )\r\n}\r\n\r\nexport default store()","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Layout from \"./components/layout/Layout\";\nimport {CssBaseline} from \"@mui/material\";\nimport {Provider} from \"react-redux\";\nimport store from \"./components/redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <CssBaseline />\n          <Layout />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}